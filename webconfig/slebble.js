var currentPage = "startPage";var stationJson = [];function changePage(page) {	$("." + currentPage).hide();	currentPage = page;	$("." + currentPage).show();}function version() {	return purl().param('version');}function getOldSettingJson() {	return purl().param('setting');}function checkVersion() {	if(version() === "1.1.0") {		$("#filterLink").hide();		$(".startPage").prepend('<div class="highlight-module  highlight-module--right   highlight-module--learning"><div class="highlight-module__container  icon-exclamation "><div class="highlight-module__content   g-wide--push-1 g-wide--pull-1  g-medium--pull-1   "><p class="highlight-module__title"> New update</p><p class="highlight-module__text"> There is or will be a update very soon for this app. Unload and load the app at My Pebble and hope for a new update! </p></div></div></div>');	}}var nr = 0;function getOldDepatures() {	var response = getOldSettingJson();		if(response !== undefined && response !== "") {		response = JSON.parse(response);				stationJson = response.route;		nr = stationJson.length;				$(".depature-range")[0].value = response.maxDepatures;		changePerformance();				updateStartPageAndFilterPage();	}			}function add(elem) {	if(nr != 5) {		var json = $(elem).next().text();		stationJson[nr] = JSON.parse(json);		removeResults();		nr++;		updateStartPageAndFilterPage();	}	changePage("startPage");	clearSearchField();}function updateStartPageAndFilterPage() {	removeAdding();		if(nr == 0) {		$(".adding").append('<p>No stations set</p>');		$(".filterAdding").append('<p>No stations set</p>');	}		for(var i = 0; i < stationJson.length; i++) {		$(".adding").append('<div><h3 id="from">' + stationJson[i].from + '</h3><a id="deleteIcon" onclick="removeFrom(this);"><i class="icon icon-close"></i></a><p style="display: none;">' + JSON.stringify(stationJson[i]) + ',</p><span style="display: none;">' + i + '</span></div>');	}	removeFilterAdding();	for(var i = 0; i < stationJson.length; i++) {		$(".filterAdding").append('<div><h3 id="from">' + stationJson[i].from + '</h3><span class="filterSpan">Bus filter :</span><input type="text" class="filter-field"  value="'+ stationJson[i].filter.join(', ') +'" '+ ((stationJson[i].busFilterActive === "true")?'':'disabled') +'><input type="checkbox" class="busFilterCheckBox" name="busFilter" value="'+ stationJson[i].busFilterActive +'" '+ ((stationJson[i].busFilterActive === "true")?'checked':'') +' ></div>');	}}function removeFrom(elem) {	stationJson.splice($(elem).parent().children("span").text(), 1);	nr--;	updateStartPageAndFilterPage();}function changePerformance() {	$( ".performance-display" ).removeClass("theme--user-input");	$( ".performance-display" ).removeClass("theme--multi-device-layouts");	$( ".performance-display" ).removeClass("theme--introduction-to-media");	if(parseInt($(".depature-range")[0].value) == 15) {		$(".performance-display").addClass("theme--user-input");	}	if(parseInt($(".depature-range")[0].value) < 15) {		$(".performance-display").addClass("theme--multi-device-layouts");	}	if(parseInt($(".depature-range")[0].value) > 15) {		$(".performance-display").addClass("theme--introduction-to-media");	}	$(".depature-number").text($(".depature-range")[0].value);	}function getMaxDepatures() {	return parseInt($(".depature-range")[0].value);}function enterKeyPress(event) {	if(event.keyCode == 13) {		stationSearch();	}}function getSettingJson() {	var options = "";	for(var i = 0; i < stationJson.length; i++) {		stationJson[i].filter = $(".filter-field")[i].value.split(", ");		stationJson[i].busFilterActive = $(".busFilterCheckBox")[i].value;		options += JSON.stringify(stationJson[i]) + ",";	}	options = '{"route": [' + options.substring(0, options.length - 1) + '], "maxDepatures": "' + getMaxDepatures() + '"}';		return options;}function removeAdding() {	$(".adding").children("div").remove();	$(".adding").children("p").remove();}function removeFilterAdding() {	$(".filterAdding").children("div").remove();	$(".filterAdding").children("p").remove();}function removeResults() {	$(".results").children("div").remove();}function clearSearchField() {	$("#search-field").val("");}function disableBusFilter(elem) {	if($(elem).parent().children(".filter-field").attr("disabled") === "disabled") {		$(elem).val("true");		$(elem).parent().children(".filter-field").attr("disabled", false);	}	else {		$(elem).val("false");		$(elem).parent().children(".filter-field").attr("disabled", true);	}}function toggleAjaxLoaderIcon() {	$("#search-btn").children("div").toggleClass("mglass ajax-loader");	//$( ".results" ).append('<div class="ajax-loader"></div>');}function stationSearch() {	removeResults();	toggleAjaxLoaderIcon();	var from = $('#search-field').val();	var response;	var req = new XMLHttpRequest();	req.open('GET', 		'slebble_conf_1_0_0.php?from=' + from, 		true	);	req.onload = function(e) {			if (req.readyState == 4) {					toggleAjaxLoaderIcon();					if(req.status == 200) {							response = JSON.parse(req.responseText);								if( Object.prototype.toString.call( response.findlocationresult.from.location ) === '[object Array]' ) {					for(var i = response.findlocationresult.from.location.length-1; i >= 0; i--) {						$( ".results" ).prepend('<div><a type="button" class="cta--primary" onclick="add(this);">' + response.findlocationresult.from.location[i].displayname + '</a><p style="display: none;">{"from" : "' + response.findlocationresult.from.location[i].displayname +'","locationid" : "'+ response.findlocationresult.from.location[i].locationid +'", "filter" : [], "busFilterActive" : "false"}</p></div>');					}				} else {					$( ".results" ).append('<div><a type="button" class="cta--primary" onclick="add(this);">' + response.findlocationresult.from.location.displayname + '</a><p style="display: none;">{"from" : "' + response.findlocationresult.from.location.displayname +'","locationid" : "'+ response.findlocationresult.from.location.locationid +'", "filter" : [], "busFilterActive" : "false"}</p></div>');				}							}			else {				$( ".results" ).append('<p>Request status: ' + req.status + '<p>');				console.log("Error");				console.log(req.status);			}					}			};	req.send(null);}$().ready(function() {	$("#startLink").click(function(elem) {		changePage("startPage");	});	$("#searchLink").click(function(elem) {		changePage("searchPage");	});	$("#filterLink").click(function(elem) {		changePage("filterPage");	});		$(".filterAdding").on("click", ".busFilterCheckBox", function(event) {		disableBusFilter(this);	});	$("#cancel").click(function() {		document.location = "pebblejs://close";	});		$("#reset").click(function() {		document.location = "pebblejs://close#reset";	});	$("#submit").click(function() {		var location = "pebblejs://close#" + encodeURIComponent(getSettingJson());		console.log("Warping to: " + location);		console.log(location);		document.location = location;	});	$(".results-back").click(function() {		$(".results").children("div").remove();	});		$("#search-btn").click(function(elem) {			elem.preventDefault();				stationSearch();		});	});